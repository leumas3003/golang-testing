// Code generated by MockGen. DO NOT EDIT.
// Source: locations_service.go

// Package mock_services is a generated GoMock package.
package mock_service

import (
	locations "golang-testing/api/domain/locations"
	errors "golang-testing/api/utils/errors"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MocklocationsServiceInterface is a mock of locationsServiceInterface interface.
type MocklocationsServiceInterface struct {
	ctrl     *gomock.Controller
	recorder *MocklocationsServiceInterfaceMockRecorder
}

// MocklocationsServiceInterfaceMockRecorder is the mock recorder for MocklocationsServiceInterface.
type MocklocationsServiceInterfaceMockRecorder struct {
	mock *MocklocationsServiceInterface
}

// NewMocklocationsServiceInterface creates a new mock instance.
func NewMocklocationsServiceInterface(ctrl *gomock.Controller) *MocklocationsServiceInterface {
	mock := &MocklocationsServiceInterface{ctrl: ctrl}
	mock.recorder = &MocklocationsServiceInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MocklocationsServiceInterface) EXPECT() *MocklocationsServiceInterfaceMockRecorder {
	return m.recorder
}

// GetCountry mocks base method.
func (m *MocklocationsServiceInterface) GetCountry(countryId string) (*locations.Country, *errors.ApiError) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCountry", countryId)
	ret0, _ := ret[0].(*locations.Country)
	ret1, _ := ret[1].(*errors.ApiError)
	return ret0, ret1
}

// GetCountry indicates an expected call of GetCountry.
func (mr *MocklocationsServiceInterfaceMockRecorder) GetCountry(countryId interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCountry", reflect.TypeOf((*MocklocationsServiceInterface)(nil).GetCountry), countryId)
}
